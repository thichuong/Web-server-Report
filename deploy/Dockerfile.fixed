# Railway Dockerfile - pin base64ct to compatible version
FROM rust:1.82-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV CARGO_NET_RETRY=10
ENV CARGO_NET_TIMEOUT=300

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./
# Copy Cargo.toml and add dependency override
RUN echo "" >> Cargo.toml && \
    echo "[dependencies.base64ct]" >> Cargo.toml && \
    echo "version = \"=1.6.0\"" >> Cargo.toml


# Tạo một project "dummy" để cache dependencies
# Điều này giúp Docker cache lại lớp layer chứa dependencies
# Lớp này chỉ build lại khi Cargo.toml hoặc Cargo.lock thay đổi
RUN mkdir src && \
    echo "fn main() {}" > src/main.rs && \
    cargo build --release --locked

# Dọn dẹp project dummy
RUN rm -rf src

# Sao chép toàn bộ mã nguồn ứng dụng
COPY . .

# Xóa target cũ và build lại ứng dụng thực sự
# Bước này sẽ sử dụng lại dependencies đã được cache
RUN rm -rf target/release && \
    cargo build --release --locked

# Build without lock file to resolve compatible versions
RUN cargo build --release --bin web-server-report

# Runtime stage
FROM debian:buster-slim as runner
# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y \
        ca-certificates \
        libssl3 \
        curl \
        tzdata \
        && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

WORKDIR /app

# Copy the binary and assets
COPY --from=builder /app/target/release/web-server-report ./web-server-report
COPY --from=builder /app/dashboards ./dashboards
COPY --from=builder /app/shared_components ./shared_components  
COPY --from=builder /app/shared_assets ./shared_assets

# Set permissions and create non-root user
RUN chmod +x ./web-server-report && \
    useradd -r -u 1001 -m appuser && \
    chown -R appuser:appuser /app

USER appuser
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=45s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Environment variables
ENV RUST_LOG=info \
    HOST=0.0.0.0 \
    PORT=8000

CMD ["./web-server-report"]
