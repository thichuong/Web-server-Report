# Ultra-optimized Railway Dockerfile - Secure & Minimal
FROM rust:1.75-slim-bookworm as builder

# Install minimal build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy dependency files first
COPY Cargo.toml Cargo.lock ./

# Pre-compile dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs && \
    cargo build --release && \
    rm -rf src target/release/deps/web_server_report*

# Copy source and build
COPY . .

# Thêm dòng này để tối ưu hóa CPU
ENV RUSTFLAGS="-C target-cpu=x86-64-v3"

RUN cargo build --release

# Runtime stage - Debian bookworm-slim (newer & smaller than bullseye)
FROM debian:bookworm-slim

# Install only essential runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && update-ca-certificates

WORKDIR /app

# Copy binary and assets
COPY --from=builder /app/target/release/web-server-report ./web-server-report
COPY --from=builder /app/dashboards ./dashboards
COPY --from=builder /app/shared_components ./shared_components
COPY --from=builder /app/shared_assets ./shared_assets

# Security optimizations
RUN chmod +x ./web-server-report && \
    useradd --system --no-create-home --shell /bin/false --uid 1001 appuser && \
    chown -R appuser:appuser /app

USER appuser

EXPOSE 8000

# Minimal environment
ENV RUST_LOG=warn \
    RUST_BACKTRACE=0 \
    DATABASE_URL="" \
    TAAPI_SECRET="" \
    REDIS_URL="" \
    HOST="0.0.0.0" \
    PORT="8000"

CMD ["./web-server-report"]
