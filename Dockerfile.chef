# Railway-optimized multi-stage build
FROM rust:1.83-slim-bookworm AS chef
RUN cargo install cargo-chef
WORKDIR /app

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
COPY --from=planner /app/recipe.json recipe.json

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Build dependencies (cached layer)
RUN cargo chef cook --release --recipe-path recipe.json

# Copy source and build
COPY . .
RUN cargo build --release

# Runtime image
FROM debian:bookworm-20240513-slim AS runtime

RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/* \
    && useradd -ms /bin/bash appuser

WORKDIR /app

# Copy binary and assets
COPY --from=builder /app/target/release/web-server-report ./web-server-report
COPY --from=builder /app/dashboards ./dashboards
COPY --from=builder /app/shared_components ./shared_components  
COPY --from=builder /app/shared_assets ./shared_assets

RUN chown -R appuser:appuser /app
USER appuser

EXPOSE 8000

ENV RUST_LOG=info \
    RUST_BACKTRACE=1 \
    HOST="0.0.0.0" \
    PORT="8000"

CMD ["./web-server-report"]
